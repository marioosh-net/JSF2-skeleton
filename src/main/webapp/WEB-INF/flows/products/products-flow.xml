<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<!-- beany dostepne w tym flow -->
	<var name="testBean" class="beans.TestBean"/>
	<var name="productsListBean" class="beans.ProductsListBean"/>
	
	<view-state id="list">
		<!-- Actions to execute immediately before view rendering. -->
		<on-render>
			<!-- bez wykorzystania dataModel -->
			<evaluate expression="testBean.getAllUsers()" result="flowScope.users"/>
			<!-- z wykorzystaniem dataModel -->
			<evaluate expression="testBean.getAllProducts()" result-type="dataModel" result="flowScope.products"/>
		</on-render>
		
		<transition on="addUser">
			<evaluate expression="testBean.addRandomUser()"/>
		</transition>	
		
		<transition on="addProduct">
			<evaluate expression="testBean.addRandomProduct()"/>
		</transition>
		
		<transition on="deleteUser">
			<evaluate expression="testBean.deleteUser(deletedUser)"/>
		</transition>
		
		<!-- delete by object -->		
		<transition on="deleteProduct">
			<!-- dluzsza wersja 
			<set name="flowScope.product" value="products.selectedRow"/>
			<evaluate expression="testBean.deleteProduct(product)"/>	
			-->	
			<evaluate expression="testBean.deleteProduct(products.selectedRow)"/>
		</transition>
		<!-- delete by id - tak tez dziala 		
		<transition on="deleteProduct">
			<evaluate expression="testBean.deleteProduct(products.selectedRow.id)"/>
		</transition>		
		-->				
		
		<transition on="details" to="details"/>
		<transition on="userDetails" to="userDetails">
			<!-- flowScope.viewedUser ustawione przez f:setPropertyActionListener -->
			<evaluate expression="testBean.getProductsByUser(flowScope.viewedUser)" result="flowScope.userProducts"/>
		</transition>
		
		<transition on="reloadFrag">
			<render fragments="toReload"/>
		</transition>
		
		<!-- przewijanie listy produktow -->
		<transition on="prevPage">
			<evaluate expression="productsListBean.prevPage()"/>
		</transition>
		<transition on="nextPage">
			<evaluate expression="productsListBean.nextPage()"/>
		</transition>
		<transition on="setPage">
			<evaluate expression="productsListBean.setPage(flowScope.page)"/>
		</transition>
		
	</view-state>
	
	<view-state id="details">
		<on-entry>
			<set name="viewScope.product" value="products.selectedRow"/>
		</on-entry>
		<transition on="back" to="list"/>
	</view-state>
	
	<view-state id="userDetails">
		<transition on="back" to="list"/>
	</view-state>

</flow>