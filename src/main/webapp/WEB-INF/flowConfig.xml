<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xmlns:faces="http://www.springframework.org/schema/faces"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/webflow-config
           http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd
           http://www.springframework.org/schema/faces
           http://www.springframework.org/schema/faces/spring-faces-2.0.xsd">

	<!-- mvc -->
	<!--
		Mapuje ścieżki żądań (URL-ów) na przepływy w rejestrze przepływów np.
		ścieżka /hotels/booking poszukuje przepływu z id "hotels/booking".
		FlowHandlerMapping pomaga DispatchServlet'owi określić jak/gdzie
		przesyłać żądania przepływów do FlowHandlerAdapter'a.
	-->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="order" value="1" />
		<property name="flowRegistry" ref="flowRegistry" />
		<property name="defaultHandler">
			<!--
				Jeżeli nie pasuje żaden przepływ, mapuj ścieżkę na widok do
				renderowania np. ścieżka "/intro" zostanie zmapowania na widok
				"intro"
			-->
			<bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
		</property>
	</bean>

	<!--
		Mapuje logiczne nazwy widoków na odpowiednie facelet'owe strony w
		danej ścieżce
	-->
	<bean id="faceletsViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.faces.mvc.JsfView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".xhtml" />
	</bean>

	<!--
		Definicja ziarna odpowiedzialnego za przekierowanie żądań do
		komponentu odpowiedzialnego za wykonywanie przepływów (flowExecutor).
		Most pomiędzy Spring MVC Dispatcher Servlet a flow executor'em,
		obsługujący żądania i manipulujący przepływani z tych żądań.
	-->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor" />
		<!-- Włączenie obsługi ajax'owych komponentów RichFaces'ów -->
		<!-- <property name="ajaxHandler">
			<bean class="org.springframework.faces.richfaces.RichFacesAjaxHandler" />
			
				<bean class="org.springframework.faces.webflow.JsfAjaxHandler" />
			
		</property> -->
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!--
		Przesłanie żądań zmapowanych do implementacji
		org.springframework.web.HttpRequestHandler
	-->
	<bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter" />	
	<!-- mvc end -->



	<!-- Główny silnik wykonujący Przepływy -->
	<webflow:flow-executor id="flowExecutor">
		<webflow:flow-execution-listeners>
			<webflow:listener ref="facesContextLifecycleListener" />
			<webflow:listener ref="hibernateFlowExecutionListener" />
		</webflow:flow-execution-listeners>
	</webflow:flow-executor>

	<!--
		Instalacja listener'a który tworzy i zwalnia FacesContext dla każdego
		żądania
	-->
	<bean id="facesContextLifecycleListener"
		class="org.springframework.faces.webflow.FlowFacesContextLifecycleListener" />

	<!--
		Definicja repozytorium Przepływów opdowiedzialnego za dostarczanie
		utworzonych przepływów do silnika. Określamy też tutaj, że chcemy
		wykorzystad komponent 'facesFlowBuilderServices'. Repozytorium
		rejestruje wszystkie definicje Przepływów znalezione w katalogu
		'/WEB-INF/flows' kończące się na '-flow.xml'
	-->
	<webflow:flow-registry id="flowRegistry"
		flow-builder-services="facesFlowBuilderServices" base-path="/WEB-INF/flows">
		<webflow:flow-location-pattern value="/*-flow.xml" />
	</webflow:flow-registry>

	<!--
		Komponent integrujący Przeływy z JSF - development = true umożliwia
		odświeżanie definicji przepływów w locie
	-->
	<faces:flow-builder-services id="facesFlowBuilderServices"
		development="true" />

	<!--
		Installs a listener that manages JPA persistence contexts for flows
		that require them
	-->
	<bean id="hibernateFlowExecutionListener"
		class="org.springframework.webflow.persistence.HibernateFlowExecutionListener">
		<constructor-arg ref="hibernateSessionFactory" />
		<constructor-arg ref="transactionManager" />
	</bean>

</beans>
